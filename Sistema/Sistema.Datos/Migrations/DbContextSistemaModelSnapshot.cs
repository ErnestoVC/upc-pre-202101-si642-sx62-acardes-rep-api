// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sistema.Datos;

namespace Sistema.Datos.Migrations
{
    [DbContext(typeof(DbContextSistema))]
    partial class DbContextSistemaModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Sistema.Entidades.Carteras.Cartera", b =>
                {
                    b.Property<int>("idcartera")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("TCEA");

                    b.Property<string>("capaitalizacion");

                    b.Property<string>("estado");

                    b.Property<DateTime>("fecha_descuento");

                    b.Property<DateTime>("fecha_emision");

                    b.Property<DateTime>("fecha_pago");

                    b.Property<int>("idcliente");

                    b.Property<int>("idusuario");

                    b.Property<string>("moneda")
                        .IsRequired();

                    b.Property<string>("num_comprobante")
                        .IsRequired();

                    b.Property<string>("serie_comprobante");

                    b.Property<decimal>("tasa");

                    b.Property<string>("tipo_tasa");

                    b.Property<decimal>("valor_entregado");

                    b.Property<decimal>("valor_neto");

                    b.Property<decimal>("valor_nominal");

                    b.Property<decimal>("valor_recibido");

                    b.HasKey("idcartera");

                    b.HasIndex("idcliente");

                    b.HasIndex("idusuario");

                    b.ToTable("cartera");
                });

            modelBuilder.Entity("Sistema.Entidades.Carteras.DetalleCartera", b =>
                {
                    b.Property<int>("iddetalle_cartera")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idcartera");

                    b.Property<int>("idgasto");

                    b.Property<string>("tipo_gasto")
                        .IsRequired();

                    b.Property<string>("tipo_valor")
                        .IsRequired();

                    b.Property<decimal>("valor");

                    b.HasKey("iddetalle_cartera");

                    b.HasIndex("idcartera");

                    b.HasIndex("idgasto");

                    b.ToTable("detalle_cartera");
                });

            modelBuilder.Entity("Sistema.Entidades.Carteras.Gasto", b =>
                {
                    b.Property<int>("idgasto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("codigo")
                        .IsRequired();

                    b.Property<bool>("condicion");

                    b.Property<string>("descripcion")
                        .IsRequired();

                    b.Property<string>("nombre")
                        .HasMaxLength(50);

                    b.HasKey("idgasto");

                    b.ToTable("gasto");
                });

            modelBuilder.Entity("Sistema.Entidades.Carteras.Persona", b =>
                {
                    b.Property<int>("idpersona")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("direccion");

                    b.Property<string>("email");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("num_documento");

                    b.Property<string>("telefono");

                    b.Property<string>("tipo_documento");

                    b.Property<string>("tipo_persona")
                        .IsRequired();

                    b.HasKey("idpersona");

                    b.ToTable("persona");
                });

            modelBuilder.Entity("Sistema.Entidades.Usuarios.Rol", b =>
                {
                    b.Property<int>("idrol")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("condicion");

                    b.Property<string>("descripcion")
                        .HasMaxLength(256);

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("idrol");

                    b.ToTable("rol");
                });

            modelBuilder.Entity("Sistema.Entidades.Usuarios.Usuario", b =>
                {
                    b.Property<int>("idusuario")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("condicion");

                    b.Property<string>("direccion");

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<int>("idrol");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("num_documento");

                    b.Property<byte[]>("password_hash")
                        .IsRequired();

                    b.Property<byte[]>("password_salt")
                        .IsRequired();

                    b.Property<string>("telefono");

                    b.Property<string>("tipo_documento");

                    b.HasKey("idusuario");

                    b.HasIndex("idrol");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("Sistema.Entidades.Carteras.Cartera", b =>
                {
                    b.HasOne("Sistema.Entidades.Carteras.Persona", "personas")
                        .WithMany("carteras")
                        .HasForeignKey("idcliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sistema.Entidades.Usuarios.Usuario", "usuarios")
                        .WithMany("Carteras")
                        .HasForeignKey("idusuario")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sistema.Entidades.Carteras.DetalleCartera", b =>
                {
                    b.HasOne("Sistema.Entidades.Carteras.Cartera", "carteras")
                        .WithMany("detalles")
                        .HasForeignKey("idcartera")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sistema.Entidades.Carteras.Gasto", "gastos")
                        .WithMany("detalleCarteras")
                        .HasForeignKey("idgasto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sistema.Entidades.Usuarios.Usuario", b =>
                {
                    b.HasOne("Sistema.Entidades.Usuarios.Rol", "rol")
                        .WithMany("usuarios")
                        .HasForeignKey("idrol")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
